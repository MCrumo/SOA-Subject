#include <iostream>
#include <vector>
using namespace std;

char matrix[25][80] = {
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','.','.','X','.','.','.','X','.','.','.','X','.','.','.','X','.','.','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','X','X','X','.','X','.','X','.','X','.','X','.','X','X','X','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','-','X','X','X','X','X','-','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','.','.','X','.','.','.','X','.','.','.','X','.','X','X','X','.','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','-','X','X','X','X','X','-','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','-','X','X','X','-','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','X','.','X','X','X','.','X','.','X','.','X','X','X','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','-','X','X','X','-','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','-','-','-','-','-','-','-','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','.','.','X','.','X','X','X','.','X','.','X','.','.','.','X','.','.','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','-','-','-','-','-','-','-','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','-','-','X','-','-','-','X','-','-','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','-','-','X','-','-','-','X','-','-','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','-','-','-','-','-','-','-','-','-','-','-','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','-','-','-','-','-','-','-','-','-','-','-','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','-','X','-','-','-','-','-','-','-','X','-','X','X','X','X','X','X','.','.','.','X','.','X','X','.','X','.','X','.','X','.','.','.','X','.','.','X','X','.','.','.','X','.','.','.','X','.','.','.','X','X','X','X','X','X','-','X','-','-','-','-','-','-','-','X','-','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','-','X','-','X','X','X','X','X','-','X','-','X','X','X','X','X','X','X','.','X','X','.','.','X','.','X','.','X','.','X','.','X','.','X','.','X','.','X','.','X','X','X','.','X','.','X','.','X','X','X','X','X','X','X','X','-','X','-','X','X','X','X','X','-','X','-','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','-','-','X','-','-','X','X','X','X','X','X','X','X','X','X','.','X','X','.','X','.','.','X','.','X','.','X','.','.','.','X','.','X','.','X','.','.','X','X','.','.','.','X','.','.','.','X','X','X','X','X','X','X','X','X','-','-','X','-','-','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','X','X','.','X','.','.','X','.','X','.','X','.','X','.','X','.','X','.','X','.','X','X','X','.','.','X','X','X','X','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','.','.','.','X','.','X','X','.','X','X','.','X','X','.','X','.','X','.','.','X','X','.','.','.','X','.','X','.','X','.','.','.','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'}
};

int main () {
    for (int i = 0; i < 25; ++i) {
        for (int j = 0; j < 80; ++j) {
            if (matrix[i][j] == '.')
                cout << "*(mat + (NUM_COLUMNS*" << i << ") + " << j << ") = stos(' ', REDBG ); "; //TEXT
            else if (matrix[i][j] == '-')
                cout << "*(mat + (NUM_COLUMNS*" << i << ") + " << j << ") = stos(' ', GREENBG ); "; //ALIENS
            /*else
                cout << "*(mat + (NUM_COLUMNS*" << i << ") + " << j << ") = stos(' ', GREYBG ); "; //FONS*/
            
        }
        cout << endl;
    }
}
